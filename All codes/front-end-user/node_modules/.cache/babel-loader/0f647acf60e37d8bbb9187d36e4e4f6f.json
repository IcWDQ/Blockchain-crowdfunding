{"ast":null,"code":"var _jsxFileName = \"/Users/matrix/front-end/src/components/FundProject/FundProject.js\";\n// src/components/FundProject/FundProject.js\nimport React, { useState } from 'react';\nimport { ethers } from 'ethers';\nimport { provider, contract } from '../../ethers';\nimport './FundProject.css';\nfunction FundProject({\n  projectId\n}) {\n  const [amount, setAmount] = useState('');\n  const [error, setError] = useState('');\n  const fundProject = async event => {\n    event.preventDefault();\n    if (parseFloat(amount) <= 0) {\n      setError('Amount must be greater than 0');\n      return;\n    }\n    try {\n      await provider.send(\"eth_requestAccounts\", []);\n      const amountInWei = ethers.utils.parseEther(amount);\n      const tx = await contract.fundProject(parseInt(projectId, 10), {\n        value: amountInWei\n      });\n      await tx.wait();\n      alert('Project funded successfully');\n      setAmount('');\n      setError('');\n    } catch (error) {\n      console.error('Error funding project', error);\n      alert('Error funding project');\n    }\n  };\n  const handleAmountChange = e => {\n    const value = e.target.value;\n    if (!isNaN(value) && parseFloat(value) >= 0) {\n      setAmount(value);\n      setError('');\n    } else {\n      setError('Please enter a valid amount');\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fund-project-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"Fund Project\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: fundProject,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \"Amount (in Ether): \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: amount,\n    onChange: handleAmountChange,\n    className: \"fund-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  })), error && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 19\n    }\n  }, error), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"fund-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"Fund Project\")));\n}\nexport default FundProject;","map":{"version":3,"names":["React","useState","ethers","provider","contract","FundProject","projectId","amount","setAmount","error","setError","fundProject","event","preventDefault","parseFloat","send","amountInWei","utils","parseEther","tx","parseInt","value","wait","alert","console","handleAmountChange","e","target","isNaN","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange"],"sources":["/Users/matrix/front-end/src/components/FundProject/FundProject.js"],"sourcesContent":["// src/components/FundProject/FundProject.js\r\nimport React, { useState } from 'react';\r\nimport { ethers } from 'ethers';\r\nimport { provider, contract } from '../../ethers';\r\nimport './FundProject.css';\r\n\r\nfunction FundProject({ projectId }) {\r\n  const [amount, setAmount] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const fundProject = async (event) => {\r\n    event.preventDefault();\r\n    if (parseFloat(amount) <= 0) {\r\n      setError('Amount must be greater than 0');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await provider.send(\"eth_requestAccounts\", []);\r\n\r\n      const amountInWei = ethers.utils.parseEther(amount);\r\n\r\n      const tx = await contract.fundProject(parseInt(projectId, 10), { value: amountInWei });\r\n      await tx.wait();\r\n\r\n      alert('Project funded successfully');\r\n      setAmount('');\r\n      setError('');\r\n    } catch (error) {\r\n      console.error('Error funding project', error);\r\n      alert('Error funding project');\r\n    }\r\n  };\r\n\r\n  const handleAmountChange = (e) => {\r\n    const value = e.target.value;\r\n    if (!isNaN(value) && parseFloat(value) >= 0) {\r\n      setAmount(value);\r\n      setError('');\r\n    } else {\r\n      setError('Please enter a valid amount');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"fund-project-container\">\r\n      <h2>Fund Project</h2>\r\n      <form onSubmit={fundProject}>\r\n        <div className=\"input-group\">\r\n          <label>Amount (in Ether): </label>\r\n          <input\r\n            type=\"text\"\r\n            value={amount}\r\n            onChange={handleAmountChange}\r\n            className=\"fund-input\"\r\n          />\r\n        </div>\r\n        {error && <p className=\"error\">{error}</p>}\r\n        <button type=\"submit\" className=\"fund-button\">Fund Project</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FundProject;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}