{"ast":null,"code":"var _jsxFileName = \"/Users/matrix/InnoFund-frontend/src/components/MetaMaskInfo/MetaMaskInfo.js\";\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport './MetaMaskInfo.css';\nconst MetaMaskInfo = ({\n  onAddressChange\n}) => {\n  const [address, setAddress] = useState('');\n  const [balance, setBalance] = useState('');\n  const getAddressAndBalance = async () => {\n    try {\n      if (!window.ethereum) {\n        console.error('MetaMask is not installed');\n        return;\n      }\n      console.log('Requesting MetaMask accounts...');\n      await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const userAddress = await signer.getAddress();\n      console.log('User Address:', userAddress);\n      setAddress(userAddress);\n      console.log('Fetching balance...');\n      const userBalance = await signer.getBalance();\n      console.log('User Balance in Wei:', userBalance.toString());\n      const formattedBalance = parseFloat(ethers.utils.formatEther(userBalance)).toFixed(4);\n      console.log('Formatted Balance in ETH:', formattedBalance);\n      setBalance(formattedBalance);\n      if (onAddressChange) {\n        onAddressChange(userAddress);\n      }\n    } catch (error) {\n      console.error('Error getting user address or balance:', error);\n      console.error('Error details:', error.message); // 输出错误的详细信息\n    }\n  };\n  useEffect(() => {\n    getAddressAndBalance();\n    const handleAccountsChanged = accounts => {\n      if (accounts.length > 0) {\n        console.log('Accounts changed:', accounts);\n        getAddressAndBalance();\n      }\n    };\n    if (window.ethereum) {\n      window.ethereum.on('accountsChanged', handleAccountsChanged);\n    }\n    return () => {\n      if (window.ethereum) {\n        window.ethereum.removeListener('accountsChanged', handleAccountsChanged);\n      }\n    };\n  }, []);\n  const formatAddress = addr => {\n    return `${addr.slice(0, 5)}...${addr.slice(-5)}`;\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metamask-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"Address:\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, address ? formatAddress(address) : 'N/A')), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, \"ETH:\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, balance || 'N/A')));\n};\nexport default MetaMaskInfo;","map":{"version":3,"names":["React","useState","useEffect","ethers","MetaMaskInfo","onAddressChange","address","setAddress","balance","setBalance","getAddressAndBalance","window","ethereum","console","error","log","request","method","provider","providers","Web3Provider","signer","getSigner","userAddress","getAddress","userBalance","getBalance","toString","formattedBalance","parseFloat","utils","formatEther","toFixed","message","handleAccountsChanged","accounts","length","on","removeListener","formatAddress","addr","slice","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/matrix/InnoFund-frontend/src/components/MetaMaskInfo/MetaMaskInfo.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport './MetaMaskInfo.css';\n\nconst MetaMaskInfo = ({ onAddressChange }) => {\n  const [address, setAddress] = useState('');\n  const [balance, setBalance] = useState('');\n\n  const getAddressAndBalance = async () => {\n    try {\n      if (!window.ethereum) {\n        console.error('MetaMask is not installed');\n        return;\n      }\n      console.log('Requesting MetaMask accounts...');\n      await window.ethereum.request({ method: 'eth_requestAccounts' });\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const userAddress = await signer.getAddress();\n      console.log('User Address:', userAddress);\n      setAddress(userAddress);\n\n      console.log('Fetching balance...');\n      const userBalance = await signer.getBalance();\n      console.log('User Balance in Wei:', userBalance.toString());\n      const formattedBalance = parseFloat(ethers.utils.formatEther(userBalance)).toFixed(4);\n      console.log('Formatted Balance in ETH:', formattedBalance);\n      setBalance(formattedBalance);\n\n      if (onAddressChange) {\n        onAddressChange(userAddress);\n      }\n    } catch (error) {\n      console.error('Error getting user address or balance:', error);\n      console.error('Error details:', error.message); // 输出错误的详细信息\n    }\n  };\n\n  useEffect(() => {\n    getAddressAndBalance();\n\n    const handleAccountsChanged = (accounts) => {\n      if (accounts.length > 0) {\n        console.log('Accounts changed:', accounts);\n        getAddressAndBalance();\n      }\n    };\n\n    if (window.ethereum) {\n      window.ethereum.on('accountsChanged', handleAccountsChanged);\n    }\n\n    return () => {\n      if (window.ethereum) {\n        window.ethereum.removeListener('accountsChanged', handleAccountsChanged);\n      }\n    };\n  }, []);\n\n  const formatAddress = (addr) => {\n    return `${addr.slice(0, 5)}...${addr.slice(-5)}`;\n  };\n\n  return (\n    <div className=\"metamask-info\">\n      <div className=\"info-item\">\n        <span className=\"label\">Address:</span>\n        <span className=\"value\">{address ? formatAddress(address) : 'N/A'}</span>\n      </div>\n      <div className=\"info-item\">\n        <span className=\"label\">ETH:</span>\n        <span className=\"value\">{balance || 'N/A'}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default MetaMaskInfo;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}