{"ast":null,"code":"var _jsxFileName = \"/Users/matrix/front-end/src/components/MetaMaskInfo/MetaMaskInfo.js\";\n// src/components/MetaMaskInfo/MetaMaskInfo.js\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport './MetaMaskInfo.css';\nconst MetaMaskInfo = ({\n  onAddressChange\n}) => {\n  const [address, setAddress] = useState('');\n  const [balance, setBalance] = useState('');\n  const getAddressAndBalance = async () => {\n    try {\n      await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const userAddress = await signer.getAddress();\n      setAddress(userAddress);\n      const userBalance = await signer.getBalance();\n      setBalance(parseFloat(ethers.utils.formatEther(userBalance)).toFixed(4));\n      if (onAddressChange) {\n        onAddressChange(userAddress);\n      }\n    } catch (error) {\n      console.error('Error getting user address or balance:', error);\n    }\n  };\n  useEffect(() => {\n    getAddressAndBalance();\n    const handleAccountsChanged = accounts => {\n      if (accounts.length > 0) {\n        getAddressAndBalance();\n      }\n    };\n    window.ethereum.on('accountsChanged', handleAccountsChanged);\n    return () => {\n      window.ethereum.removeListener('accountsChanged', handleAccountsChanged);\n    };\n  }, []);\n  const formatAddress = addr => {\n    return `${addr.slice(0, 5)}...${addr.slice(-5)}`;\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metamask-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"Address:\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, formatAddress(address))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"ETH:\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, balance)));\n};\nexport default MetaMaskInfo;","map":{"version":3,"names":["React","useState","useEffect","ethers","MetaMaskInfo","onAddressChange","address","setAddress","balance","setBalance","getAddressAndBalance","window","ethereum","request","method","provider","providers","Web3Provider","signer","getSigner","userAddress","getAddress","userBalance","getBalance","parseFloat","utils","formatEther","toFixed","error","console","handleAccountsChanged","accounts","length","on","removeListener","formatAddress","addr","slice","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/matrix/front-end/src/components/MetaMaskInfo/MetaMaskInfo.js"],"sourcesContent":["// src/components/MetaMaskInfo/MetaMaskInfo.js\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport './MetaMaskInfo.css';\n\nconst MetaMaskInfo = ({ onAddressChange }) => {\n  const [address, setAddress] = useState('');\n  const [balance, setBalance] = useState('');\n\n  const getAddressAndBalance = async () => {\n    try {\n      await window.ethereum.request({ method: 'eth_requestAccounts' });\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const userAddress = await signer.getAddress();\n      setAddress(userAddress);\n      \n      const userBalance = await signer.getBalance();\n      setBalance((parseFloat(ethers.utils.formatEther(userBalance))).toFixed(4));\n\n      if (onAddressChange) {\n        onAddressChange(userAddress);\n      }\n    } catch (error) {\n      console.error('Error getting user address or balance:', error);\n    }\n  };\n\n  useEffect(() => {\n    getAddressAndBalance();\n\n    const handleAccountsChanged = (accounts) => {\n      if (accounts.length > 0) {\n        getAddressAndBalance();\n      }\n    };\n\n    window.ethereum.on('accountsChanged', handleAccountsChanged);\n\n    return () => {\n      window.ethereum.removeListener('accountsChanged', handleAccountsChanged);\n    };\n  }, []);\n\n  const formatAddress = (addr) => {\n    return `${addr.slice(0, 5)}...${addr.slice(-5)}`;\n  };\n\n  return (\n    <div className=\"metamask-info\">\n      <div className=\"info-item\">\n        <span className=\"label\">Address:</span>\n        <span className=\"value\">{formatAddress(address)}</span>\n      </div>\n      <div className=\"info-item\">\n        <span className=\"label\">ETH:</span>\n        <span className=\"value\">{balance}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default MetaMaskInfo;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}