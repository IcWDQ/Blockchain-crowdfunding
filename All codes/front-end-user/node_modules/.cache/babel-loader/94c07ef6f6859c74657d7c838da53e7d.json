{"ast":null,"code":"var _jsxFileName = \"/Users/matrix/front-end/src/components/UserUploadProof/UserUploadProof.js\";\nimport React, { useState, useEffect } from 'react';\nimport { provider } from '../../ethers'; // Assumes you have a configured ethers provider\nimport axios from 'axios';\nimport './UserUploadProof.css';\nfunction UserUploadProof({\n  projectId\n}) {\n  const [milestoneDescription, setMilestoneDescription] = useState('');\n  const [file, setFile] = useState(null);\n  const [fileName, setFileName] = useState('');\n  const [currentUser, setCurrentUser] = useState('');\n  useEffect(() => {\n    const fetchCurrentUser = async () => {\n      const accounts = await provider.send(\"eth_requestAccounts\", []);\n      setCurrentUser(accounts[0].toLowerCase());\n    };\n    fetchCurrentUser();\n  }, []);\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n    setFileName(e.target.files[0].name);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!file) {\n      alert('Please select a file.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('projectId', projectId);\n    formData.append('milestoneDescription', milestoneDescription);\n    formData.append('otherDocument', file);\n    formData.append('currentUser', currentUser);\n    console.log('Submitting form with the following data:');\n    console.log('projectId:', projectId);\n    console.log('milestoneDescription:', milestoneDescription);\n    console.log('file:', file);\n    console.log('currentUser:', currentUser);\n    try {\n      const response = await axios.post('http://localhost:3001/api/userApproveMilestones', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      alert('Milestone proof uploaded successfully');\n      console.log('Response data:', response.data);\n    } catch (error) {\n      console.error('Error uploading milestone proof:', error);\n      alert(`Error: ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upload-proof-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"Upload Milestone Proof\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, \"Milestone Description: \"), /*#__PURE__*/React.createElement(\"textarea\", {\n    value: milestoneDescription,\n    onChange: e => setMilestoneDescription(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"file-input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"file-input-label\",\n    htmlFor: \"file-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, \"Choose File\", fileName && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"file-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 26\n    }\n  }, fileName)), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"file-input\",\n    type: \"file\",\n    onChange: handleFileChange,\n    required: true,\n    className: \"file-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, \"Upload\")));\n}\nexport default UserUploadProof;","map":{"version":3,"names":["React","useState","useEffect","provider","axios","UserUploadProof","projectId","milestoneDescription","setMilestoneDescription","file","setFile","fileName","setFileName","currentUser","setCurrentUser","fetchCurrentUser","accounts","send","toLowerCase","handleFileChange","e","target","files","name","handleSubmit","event","preventDefault","alert","formData","FormData","append","console","log","response","post","headers","data","error","message","createElement","className","__self","__source","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","required","htmlFor","id","type"],"sources":["/Users/matrix/front-end/src/components/UserUploadProof/UserUploadProof.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { provider } from '../../ethers'; // Assumes you have a configured ethers provider\r\nimport axios from 'axios';\r\nimport './UserUploadProof.css';\r\n\r\nfunction UserUploadProof({ projectId }) {\r\n  const [milestoneDescription, setMilestoneDescription] = useState('');\r\n  const [file, setFile] = useState(null);\r\n  const [fileName, setFileName] = useState('');\r\n  const [currentUser, setCurrentUser] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchCurrentUser = async () => {\r\n      const accounts = await provider.send(\"eth_requestAccounts\", []);\r\n      setCurrentUser(accounts[0].toLowerCase());\r\n    };\r\n    fetchCurrentUser();\r\n  }, []);\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n    setFileName(e.target.files[0].name);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!file) {\r\n      alert('Please select a file.');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('projectId', projectId);\r\n    formData.append('milestoneDescription', milestoneDescription);\r\n    formData.append('otherDocument', file);\r\n    formData.append('currentUser', currentUser);\r\n\r\n    console.log('Submitting form with the following data:');\r\n    console.log('projectId:', projectId);\r\n    console.log('milestoneDescription:', milestoneDescription);\r\n    console.log('file:', file);\r\n    console.log('currentUser:', currentUser);\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:3001/api/userApproveMilestones', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n      alert('Milestone proof uploaded successfully');\r\n      console.log('Response data:', response.data);\r\n    } catch (error) {\r\n      console.error('Error uploading milestone proof:', error);\r\n      alert(`Error: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"upload-proof-container\">\r\n      <h2>Upload Milestone Proof</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>Milestone Description: </label>\r\n          <textarea\r\n            value={milestoneDescription}\r\n            onChange={(e) => setMilestoneDescription(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"file-input-container\">\r\n          <label className=\"file-input-label\" htmlFor=\"file-input\">\r\n            Choose File\r\n            {fileName && <span className=\"file-name\">{fileName}</span>}\r\n          </label>\r\n          <input\r\n            id=\"file-input\"\r\n            type=\"file\"\r\n            onChange={handleFileChange}\r\n            required\r\n            className=\"file-input\"\r\n          />\r\n        </div>\r\n        <button type=\"submit\">Upload</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserUploadProof;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}