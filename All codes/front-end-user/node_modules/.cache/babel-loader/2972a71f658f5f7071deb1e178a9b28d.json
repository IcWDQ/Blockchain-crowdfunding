{"ast":null,"code":"// src/components/MetaMaskInfo/MetaMaskInfo.js\nimport React,{useState,useEffect}from'react';import{ethers}from'ethers';import'./MetaMaskInfo.css';const MetaMaskInfo=_ref=>{let{onAddressChange}=_ref;const[address,setAddress]=useState('');const[balance,setBalance]=useState('');const getAddressAndBalance=async()=>{try{await window.ethereum.request({method:'eth_requestAccounts'});const provider=new ethers.providers.Web3Provider(window.ethereum);const signer=provider.getSigner();const userAddress=await signer.getAddress();setAddress(userAddress);const userBalance=await signer.getBalance();setBalance(parseFloat(ethers.utils.formatEther(userBalance)).toFixed(4));if(onAddressChange){onAddressChange(userAddress);}}catch(error){console.error('Error getting user address or balance:',error);}};useEffect(()=>{getAddressAndBalance();const handleAccountsChanged=accounts=>{if(accounts.length>0){getAddressAndBalance();}};window.ethereum.on('accountsChanged',handleAccountsChanged);return()=>{window.ethereum.removeListener('accountsChanged',handleAccountsChanged);};},[]);const formatAddress=addr=>{return\"\".concat(addr.slice(0,5),\"...\").concat(addr.slice(-5));};return/*#__PURE__*/React.createElement(\"div\",{className:\"metamask-info\"},/*#__PURE__*/React.createElement(\"div\",{className:\"info-item\"},/*#__PURE__*/React.createElement(\"span\",{className:\"label\"},\"Address:\"),/*#__PURE__*/React.createElement(\"span\",{className:\"value\"},formatAddress(address))),/*#__PURE__*/React.createElement(\"div\",{className:\"info-item\"},/*#__PURE__*/React.createElement(\"span\",{className:\"label\"},\"ETH:\"),/*#__PURE__*/React.createElement(\"span\",{className:\"value\"},balance)));};export default MetaMaskInfo;","map":{"version":3,"names":["React","useState","useEffect","ethers","MetaMaskInfo","_ref","onAddressChange","address","setAddress","balance","setBalance","getAddressAndBalance","window","ethereum","request","method","provider","providers","Web3Provider","signer","getSigner","userAddress","getAddress","userBalance","getBalance","parseFloat","utils","formatEther","toFixed","error","console","handleAccountsChanged","accounts","length","on","removeListener","formatAddress","addr","concat","slice","createElement","className"],"sources":["/Users/matrix/front-end/src/components/MetaMaskInfo/MetaMaskInfo.js"],"sourcesContent":["// src/components/MetaMaskInfo/MetaMaskInfo.js\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport './MetaMaskInfo.css';\n\nconst MetaMaskInfo = ({ onAddressChange }) => {\n  const [address, setAddress] = useState('');\n  const [balance, setBalance] = useState('');\n\n  const getAddressAndBalance = async () => {\n    try {\n      await window.ethereum.request({ method: 'eth_requestAccounts' });\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const userAddress = await signer.getAddress();\n      setAddress(userAddress);\n      \n      const userBalance = await signer.getBalance();\n      setBalance((parseFloat(ethers.utils.formatEther(userBalance))).toFixed(4));\n\n      if (onAddressChange) {\n        onAddressChange(userAddress);\n      }\n    } catch (error) {\n      console.error('Error getting user address or balance:', error);\n    }\n  };\n\n  useEffect(() => {\n    getAddressAndBalance();\n\n    const handleAccountsChanged = (accounts) => {\n      if (accounts.length > 0) {\n        getAddressAndBalance();\n      }\n    };\n\n    window.ethereum.on('accountsChanged', handleAccountsChanged);\n\n    return () => {\n      window.ethereum.removeListener('accountsChanged', handleAccountsChanged);\n    };\n  }, []);\n\n  const formatAddress = (addr) => {\n    return `${addr.slice(0, 5)}...${addr.slice(-5)}`;\n  };\n\n  return (\n    <div className=\"metamask-info\">\n      <div className=\"info-item\">\n        <span className=\"label\">Address:</span>\n        <span className=\"value\">{formatAddress(address)}</span>\n      </div>\n      <div className=\"info-item\">\n        <span className=\"label\">ETH:</span>\n        <span className=\"value\">{balance}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default MetaMaskInfo;\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,MAAM,KAAQ,QAAQ,CAC/B,MAAO,oBAAoB,CAE3B,KAAM,CAAAC,YAAY,CAAGC,IAAA,EAAyB,IAAxB,CAAEC,eAAgB,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,OAAO,CAAEC,UAAU,CAAC,CAAGP,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAACQ,OAAO,CAAEC,UAAU,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAE1C,KAAM,CAAAU,oBAAoB,CAAG,KAAAA,CAAA,GAAY,CACvC,GAAI,CACF,KAAM,CAAAC,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAC,CAAEC,MAAM,CAAE,qBAAsB,CAAC,CAAC,CAChE,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAAb,MAAM,CAACc,SAAS,CAACC,YAAY,CAACN,MAAM,CAACC,QAAQ,CAAC,CACnE,KAAM,CAAAM,MAAM,CAAGH,QAAQ,CAACI,SAAS,CAAC,CAAC,CACnC,KAAM,CAAAC,WAAW,CAAG,KAAM,CAAAF,MAAM,CAACG,UAAU,CAAC,CAAC,CAC7Cd,UAAU,CAACa,WAAW,CAAC,CAEvB,KAAM,CAAAE,WAAW,CAAG,KAAM,CAAAJ,MAAM,CAACK,UAAU,CAAC,CAAC,CAC7Cd,UAAU,CAAEe,UAAU,CAACtB,MAAM,CAACuB,KAAK,CAACC,WAAW,CAACJ,WAAW,CAAC,CAAC,CAAEK,OAAO,CAAC,CAAC,CAAC,CAAC,CAE1E,GAAItB,eAAe,CAAE,CACnBA,eAAe,CAACe,WAAW,CAAC,CAC9B,CACF,CAAE,MAAOQ,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,wCAAwC,CAAEA,KAAK,CAAC,CAChE,CACF,CAAC,CAED3B,SAAS,CAAC,IAAM,CACdS,oBAAoB,CAAC,CAAC,CAEtB,KAAM,CAAAoB,qBAAqB,CAAIC,QAAQ,EAAK,CAC1C,GAAIA,QAAQ,CAACC,MAAM,CAAG,CAAC,CAAE,CACvBtB,oBAAoB,CAAC,CAAC,CACxB,CACF,CAAC,CAEDC,MAAM,CAACC,QAAQ,CAACqB,EAAE,CAAC,iBAAiB,CAAEH,qBAAqB,CAAC,CAE5D,MAAO,IAAM,CACXnB,MAAM,CAACC,QAAQ,CAACsB,cAAc,CAAC,iBAAiB,CAAEJ,qBAAqB,CAAC,CAC1E,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAK,aAAa,CAAIC,IAAI,EAAK,CAC9B,SAAAC,MAAA,CAAUD,IAAI,CAACE,KAAK,CAAC,CAAC,CAAE,CAAC,CAAC,QAAAD,MAAA,CAAMD,IAAI,CAACE,KAAK,CAAC,CAAC,CAAC,CAAC,EAChD,CAAC,CAED,mBACEvC,KAAA,CAAAwC,aAAA,QAAKC,SAAS,CAAC,eAAe,eAC5BzC,KAAA,CAAAwC,aAAA,QAAKC,SAAS,CAAC,WAAW,eACxBzC,KAAA,CAAAwC,aAAA,SAAMC,SAAS,CAAC,OAAO,EAAC,UAAc,CAAC,cACvCzC,KAAA,CAAAwC,aAAA,SAAMC,SAAS,CAAC,OAAO,EAAEL,aAAa,CAAC7B,OAAO,CAAQ,CACnD,CAAC,cACNP,KAAA,CAAAwC,aAAA,QAAKC,SAAS,CAAC,WAAW,eACxBzC,KAAA,CAAAwC,aAAA,SAAMC,SAAS,CAAC,OAAO,EAAC,MAAU,CAAC,cACnCzC,KAAA,CAAAwC,aAAA,SAAMC,SAAS,CAAC,OAAO,EAAEhC,OAAc,CACpC,CACF,CAAC,CAEV,CAAC,CAED,cAAe,CAAAL,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module"}