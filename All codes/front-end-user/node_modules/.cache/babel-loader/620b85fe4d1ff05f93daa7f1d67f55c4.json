{"ast":null,"code":"var _jsxFileName = \"/Users/matrix/front-end/src/components/UserUploadProof/UserUploadProof.js\";\n// src/components/UserUploadProof/UserUploadProof.js\nimport React, { useState, useEffect } from 'react';\nimport { provider } from '../../ethers'; // Assumes you have a configured ethers provider\nimport axios from 'axios';\nimport './UserUploadProof.css';\nfunction UserUploadProof({\n  projectId\n}) {\n  const [milestoneDescription, setMilestoneDescription] = useState('');\n  const [file, setFile] = useState(null);\n  const [currentUser, setCurrentUser] = useState('');\n  const [activeMilestone, setActiveMilestone] = useState(null);\n  const [projectStatus, setProjectStatus] = useState('');\n  useEffect(() => {\n    const fetchCurrentUser = async () => {\n      try {\n        const accounts = await provider.send(\"eth_requestAccounts\", []);\n        setCurrentUser(accounts[0].toLowerCase());\n      } catch (error) {\n        console.error('Error fetching current user:', error);\n      }\n    };\n    const fetchProjectAndMilestone = async projectId => {\n      try {\n        const response = await axios.get(`/api/projects/${projectId}`);\n        const project = response.data;\n        setProjectStatus(project.status.toLowerCase());\n        const pendingMilestone = project.milestones.find(milestone => milestone.milestonestatus === 'pending' || milestone.milestonestatus === 'approved');\n        setActiveMilestone(pendingMilestone);\n      } catch (error) {\n        console.error('Error fetching project and milestones:', error);\n      }\n    };\n    fetchCurrentUser();\n    fetchProjectAndMilestone(projectId);\n  }, [projectId]);\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!activeMilestone) {\n      alert('No pending milestone found');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('projectId', projectId);\n    formData.append('milestoneId', activeMilestone.milestoneId);\n    formData.append('milestoneDescription', milestoneDescription);\n    formData.append('otherDocument', file);\n    formData.append('currentUser', currentUser);\n    try {\n      await axios.post('http://localhost:3001/api/userApproveMilestones', formData);\n      alert('Milestone proof uploaded successfully');\n    } catch (error) {\n      console.error('Error uploading milestone proof:', error);\n      alert(`Error: ${error.message}`);\n    }\n  };\n  if (projectStatus !== 'funded' || !activeMilestone) {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 12\n      }\n    }, \"Project must be funded and have a pending or approved milestone to upload proof.\");\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upload-proof-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, \"Upload Milestone Proof\"), activeMilestone && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 27\n    }\n  }, \"Uploading proof for Milestone ID: \", activeMilestone.milestoneId), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, \"Milestone Description: \"), /*#__PURE__*/React.createElement(\"textarea\", {\n    value: milestoneDescription,\n    onChange: e => setMilestoneDescription(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"file-input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"file-input-label\",\n    htmlFor: \"file-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, \"Choose File\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"file-input\",\n    type: \"file\",\n    onChange: handleFileChange,\n    required: true,\n    className: \"file-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, \"Upload\")));\n}\nexport default UserUploadProof;","map":{"version":3,"names":["React","useState","useEffect","provider","axios","UserUploadProof","projectId","milestoneDescription","setMilestoneDescription","file","setFile","currentUser","setCurrentUser","activeMilestone","setActiveMilestone","projectStatus","setProjectStatus","fetchCurrentUser","accounts","send","toLowerCase","error","console","fetchProjectAndMilestone","response","get","project","data","status","pendingMilestone","milestones","find","milestone","milestonestatus","handleFileChange","e","target","files","handleSubmit","event","preventDefault","alert","formData","FormData","append","milestoneId","post","message","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","value","onChange","required","htmlFor","id","type"],"sources":["/Users/matrix/front-end/src/components/UserUploadProof/UserUploadProof.js"],"sourcesContent":["// src/components/UserUploadProof/UserUploadProof.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { provider } from '../../ethers'; // Assumes you have a configured ethers provider\r\nimport axios from 'axios';\r\nimport './UserUploadProof.css';\r\n\r\nfunction UserUploadProof({ projectId }) {\r\n  const [milestoneDescription, setMilestoneDescription] = useState('');\r\n  const [file, setFile] = useState(null);\r\n  const [currentUser, setCurrentUser] = useState('');\r\n  const [activeMilestone, setActiveMilestone] = useState(null);\r\n  const [projectStatus, setProjectStatus] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchCurrentUser = async () => {\r\n      try {\r\n        const accounts = await provider.send(\"eth_requestAccounts\", []);\r\n        setCurrentUser(accounts[0].toLowerCase());\r\n      } catch (error) {\r\n        console.error('Error fetching current user:', error);\r\n      }\r\n    };\r\n\r\n    const fetchProjectAndMilestone = async (projectId) => {\r\n      try {\r\n        const response = await axios.get(`/api/projects/${projectId}`);\r\n        const project = response.data;\r\n        setProjectStatus(project.status.toLowerCase());\r\n        const pendingMilestone = project.milestones.find(milestone => milestone.milestonestatus === 'pending' || milestone.milestonestatus === 'approved');\r\n        setActiveMilestone(pendingMilestone);\r\n      } catch (error) {\r\n        console.error('Error fetching project and milestones:', error);\r\n      }\r\n    };\r\n\r\n    fetchCurrentUser();\r\n    fetchProjectAndMilestone(projectId);\r\n  }, [projectId]);\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (!activeMilestone) {\r\n      alert('No pending milestone found');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('projectId', projectId);\r\n    formData.append('milestoneId', activeMilestone.milestoneId);\r\n    formData.append('milestoneDescription', milestoneDescription);\r\n    formData.append('otherDocument', file);\r\n    formData.append('currentUser', currentUser);\r\n\r\n    try {\r\n      await axios.post('http://localhost:3001/api/userApproveMilestones', formData);\r\n      alert('Milestone proof uploaded successfully');\r\n    } catch (error) {\r\n      console.error('Error uploading milestone proof:', error);\r\n      alert(`Error: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  if (projectStatus !== 'funded' || !activeMilestone) {\r\n    return <p>Project must be funded and have a pending or approved milestone to upload proof.</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"upload-proof-container\">\r\n      <h2>Upload Milestone Proof</h2>\r\n      {activeMilestone && <p>Uploading proof for Milestone ID: {activeMilestone.milestoneId}</p>}\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>Milestone Description: </label>\r\n          <textarea\r\n            value={milestoneDescription}\r\n            onChange={(e) => setMilestoneDescription(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"file-input-container\">\r\n          <label className=\"file-input-label\" htmlFor=\"file-input\">Choose File</label>\r\n          <input\r\n            id=\"file-input\"\r\n            type=\"file\"\r\n            onChange={handleFileChange}\r\n            required\r\n            className=\"file-input\"\r\n          />\r\n        </div>\r\n        <button type=\"submit\">Upload</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserUploadProof;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}